# Example libconfig configuration file
# Demonstrates all supported data types and features

version = "1.0.0";

application = {
    name = "Example Application";

    # Window configuration
    window = {
        title = "My App Window";
        size = { width = 1024; height = 768; };
        position = { x = 100; y = 50; };
        resizable = true;
    };

    # Different integer formats
    numbers = {
        decimal = 42;
        hexadecimal = 0xFF;        // 255
        binary = 0b1010;          // 10
        octal = 0o755;            // 493
        big_integer = 9223372036854775807L;
        negative = -123;
    };

    # Floating point values
    floats = {
        pi = 3.141592653589793;
        euler = 2.718281828459045;
        scientific = 1.23e-4;
        negative_exp = -2.5E+3;
    };

    # Boolean values
    flags = {
        debug_enabled = true;
        production_mode = false;
        testing = TRUE;           // Case insensitive
        logging = False;          // Case insensitive
    };

    # String features
    strings = {
        simple = "Hello, World!";
        with_quotes = "He said, \"Hello there!\"";
        with_escapes = "Line 1\nLine 2\tTabbed\rWindows line ending";
        hex_escape = "Unicode: \x41\x42\x43";  // ABC

        # String concatenation
        multiline = "This is a very long string that "
                   "spans multiple lines and demonstrates "
                   "automatic string concatenation.";
    };

    # Arrays (homogeneous)
    arrays = {
        string_array = [ "red", "green", "blue", "yellow" ];
        integer_array = [ 1, 2, 3, 5, 8, 13, 21 ];
        float_array = [ 1.1, 2.2, 3.3, 4.4 ];
        boolean_array = [ true, false, true, true ];
        empty = [ ];
        with_trailing_comma = [ "item1", "item2", "item3", ];
    };

    # Lists (heterogeneous)
    lists = {
        mixed_types = ( "string", 42, true, 3.14159, { nested_object = "value"; count = 5; } );

        nested_lists = (
            ( "inner", "list", "one" ),
            ( 1, 2, 3 ),
            ( )  // empty list
        );

        complex = (
            {
                name = "First Item";
                properties = { color = "red"; size = 10; enabled = true; };
                tags = [ "important", "primary" ];
            },
            {
                name = "Second Item";
                properties = { color = "blue"; size = 15; enabled = false; };
                tags = [ "secondary", "optional" ];
            }
        );
    };
};

# Database configuration
database = {
    host = "localhost";
    port = 5432;
    username = "admin";
    password = "secret123";

    connection_pool = {
        min_connections = 5;
        max_connections = 50;
        timeout = 30;
        retry_attempts = 3;
    };

    databases = (
        { name = "primary"; schema = "public"; },
        { name = "analytics"; schema = "analytics"; },
        { name = "logs"; schema = "logging"; }
    );
};

# Logging configuration
logging = {
    level = "INFO";
    format = "[%timestamp%] %level% - %message%";
    outputs = [ "console", "file", "syslog" ];

    file_config = {
        path = "/var/log/app.log";
        max_size = 104857600;  // 100MB
        backup_count = 5;
        rotation = true;
    };
};

# Feature flags
features = {
    new_ui = true;
    beta_features = false;
    experimental = {
        ai_integration = false;
        voice_commands = true;
        gesture_control = false;
    };
};

# Build information
build_number = 12345L;

# Final note using colon assignment
final_note: "This configuration demonstrates all libconfig features!";